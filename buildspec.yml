version: 0.2

env:
  parameter-store:
    DOCKER_REGISTRY_USERNAME: /myapp/docker-credentials/username
    DOCKER_REGISTRY_PASSWORD: /myapp/docker-credentials/password
    DOCKER_REGISTRY_URL: /myapp/docker-registry/url

phases:
  install:
    runtime-versions:
      nodejs: 12
    commands:
      - echo Installing dependencies...
      - npm config set registry https://registry.npmjs.org/

  pre_build:
    commands:
      - echo Logging in to Docker Registry...
      - echo "$DOCKER_REGISTRY_PASSWORD" | docker login -u "$DOCKER_REGISTRY_USERNAME" --password-stdin "$DOCKER_REGISTRY_URL"
      - IMAGE_REPO_NAME="tws-online-shop-app-demo"
      - IMAGE_NAME="$DOCKER_REGISTRY_URL/$IMAGE_REPO_NAME"

  build:
    commands:
      - echo Build started on `date`
      - echo Packaging application...
      - zip -r online-shop-app.zip . -x "node_modules/*" ".git/*"
      - echo Building Docker image...
      - docker build -t $IMAGE_NAME:latest .

  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing Docker image...
      - docker push $IMAGE_NAME:latest
      - echo Uploading packaged zip to S3...
      - aws s3 cp online-shop-app.zip s3://tws-online-shop-demo/online-shop-app/
      - echo Writing imagedefinitions.json...
      - printf '[{"name":"tws-online-shop-container","imageUri":"%s"}]' $IMAGE_NAME:latest > imagedefinitions.json
      - cat imagedefinitions.json

artifacts:
  files:
    - imagedefinitions.json
    - online-shop-app.zip
  discard-paths: yes
